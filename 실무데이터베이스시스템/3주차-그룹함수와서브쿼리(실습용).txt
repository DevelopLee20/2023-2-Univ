--그룹함수의 사용(57쪽)
----------------------------
--그룹함수란? 
---> 여러개의 겨로가 행(row)에 대한 집계함수. 합계, 평균, 개수, 최대/최소 등
 
--다음을 수행해보고 각 함수의 의미를 알아보자

SELECT AVG(SAL), MAX(SAL), MIN(SAL), SUM(SAL)
FROM EMP
WHERE JOB LIKE 'SALES%';

COUNT함수 사용 시 주의 사항!
SELECT COUNT(*)
FROM EMP;

SELECT COUNT(comm)
FROM EMP;
 ----> 무엇이 다른가?

SELECT comm
FROM EMP
WHERE comm IS NOT NULL;
--->count 함수는 null이 아닌 행의 수를 반환

-- 그룹함수에서 NULL은 제외됨!!
다음 두 명령문을 비교해보라

SELECT AVG(COMM)
FROM EMP;

SELECT AVG(NVL(COMM,0))
FROM EMP;

---> 무엇이 다른가?


--연습문제 (업무추진비을 받지 않는 직원의 수를 구하라) --->두가지 방법





*******************
GROUP BY의 사용
*******************

SELECT COUNT(empno) "인원수", AVG(sal) "평균급여액", 
           MAX(sal) "최고급여액", MIN(sal) "최저급여액", 
           SUM(sal) "급여합계"
FROM emp;

----> 자 이제 다음을 생각해보자
특정 컬럼에 대하여 동일 집단에 대해서 각각 집계함수를 구할 수는 없을까?
예를 들어 짖책별 평균급여액 등


SELECT job 직책, COUNT(empno) "인원수", AVG(sal) "평균급여액", 
           MAX(sal) "최고급여액", MIN(sal) "최저급여액", 
           SUM(sal) "급여합계"
FROM emp   
GROUP BY job;

-----> (연습문제)이번에는 부서별로 해보자

--(각자 위문장을 참고하여 작성하기)




---> 부서번호에 대하여 정렬까지 해보자

--(각자 위문장을 참고하여 작성하기)

--GROUP BY ,ORDER BY의 순서가 바뀌면? 

--******** 두개 이상의 칼럼에 대하여 집계함수를 구할 수는 없을까?

SELECT DEPTNO 부서번호, JOB 직책 , COUNT(*) 인원수, ROUND(AVG(sal),1) 평균급여
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

-- 다음의 두 질의를 비교해보라*

최고급여가 3000보다 큰 부서에 대한 평균급여를 구하려면???
다음과 같이 하는 함정에 빠지지 말자!!!

SELECT DEPTNO, AVG(SAL)
FROM EMP
WHERE MAX(SAL) >=3000
GROUP BY DEPTNO;


---->에러!!!!  where절은 모든행에 대하여 적용됨. 
-----> 최고급여가 3000 이상인 부서  
-----> DEPTNO  HAVING MAX(SAL) >=3000;
---->(연습문제)집계함수에 대한 제약조건은 HAVING절을 쓰자!

  





--- 중첩 그룹함수
-- (연습문제) 평균급여가 최고인 부서의 급여는?
--> MAX(AVG(SAL)






--평균급여가 최고인 부서의 급여와 부서번호를 알고 싶다!!!
--어찌할까?

SELECT DEPTNO, MAX(AVG(SAL))
FROM EMP
GROUP BY DEPTNO;

-->안된다! 어떻게 해결할까? 
--다음 서브쿼리를 배우고 해결해보자



-----------------------
서브쿼리 61쪽
----------------------
-- 질의식 내에 또 다른 질의식을 내포함

---예를 들어 7369사원과 같은 부서에 근무하는 사원의 이름과 부서를 출력하려면
     ----> 7369사원이 근무하는 부서를 먼저 알아낸 뒤 이와 비교하여 추출



SELECT ename, deptno
      FROM emp
      WHERE deptno = (SELECT deptno
                    FROM emp
                    WHERE empno = 7369);


부서번호가 10번인 사원의 직책과 같은 직책을 가지는 사원의 이름과 직책을 구해보자

SELECT ename, job
      FROM emp
      WHERE job = (SELECT job
                    FROM emp
                    WHERE deptno = 10);

--오류!!!
--오류의 원인을 알아보자
--우선 부질의만 실행해보자

SELECT job
FROM emp 
WHERE deptno = 10;

--결과 값이 여러개인데 이것들과 같은값을 찾을 수는 없다
--다음을 수행해보자

SELECT ename, job
      FROM emp
      WHERE job = any (SELECT job
                    FROM emp
                    WHERE deptno = 10);

SELECT ename, job
      FROM emp
      WHERE job in (SELECT job
                    FROM emp
                    WHERE deptno = 10);

--any는 in으로 대체될 수 있음

----------------------------------
-- ANY와 ALL의 사용
---------------------------------

--영업사원이 아닌 직원 중에 영업사원들의 급여보다 적은 급여를 받는 직원 찾기

--먼저 영업사원들의 급여를 알아보자

SELECT SAL
FROM EMP
 WHERE JOB='SALESMAN';

--any문의 사용

SELECT EMPNO, ENAME, JOB, sal
FROM EMP
WHERE SAL <any (SELECT SAL
                FROM EMP
                WHERE JOB='SALESMAN')
      AND JOB <> 'SALESMAN';

-----> < any (1600, 1250, 1250,  1500) 의 의미는 어느 하나만이라도 해당 되는 것을 찾기
----->   즉, 'SALESMAN' 사원들 중 "어느 한명"이라도 본인보다 높은 급여가 있는 사원 정보 
----->   따라서 최대 값 1600보다 작으면 만족


-- all문의 사용

SELECT EMPNO, ENAME, JOB, sal
FROM EMP
WHERE SAL <all (SELECT SAL
                FROM EMP
                WHERE JOB='SALESMAN')
 AND JOB <> 'SALESMAN';

-----> < all (1600, 1250, 1250,  1500) 의 의미는 무든 값에 대하여 만족되는 것을 찾기
              즉,  "모든" 'SALESMAN' 사원들이 본인보다 높은 급여를 받는 사원 정보 
           따라서 최소 값 1250 보다 작아야 만족



----------------------------------------
--EXISTS 연산자의 사용 예제 64쪽
----------------------------------------

--부하직원이 있는 사원의 정보, 즉, 다른 사람의 상사가 되는 사람 찾기

--우선 emp의 상황을 보자

SELECT empno, ename,mgr
FROM emp;

--우선 7369가 다른 사람의 상사가 될 수 있는지 알아보자

SELECT empno
FROM emp
WHERE mgr= 7369;

---> 만약 하나라도 출력이 되면 7369는 다른 사람의 상사가 될 수 있음
 

이번에는 7902를 알아보자

SELECT empno
FROM emp
WHERE mgr= 7902;

--모든 사원에 대하여 일괄적으로 조회할 수 있을까?

---> 나의 사원 번호가 다른 사람들의 mgr값과 같으면 나는 다른 사람의 상사가 된다

--이렇게 해보자!
--내 사원번호를 mgr 값으로 가지는 직원 찾기

SELECT empno, enamel
FROM emp 
WHERE  (SELECT count (empno)
              FROM emp
              WHERE mgr= empno) >0;

--원하는 결과인가? 해결 방법은?

----------------------------------------
-- Alias(Rename) 의 사용 42쪽
----------------------------------------
--테이블에 대해 Alias를 사용해보자
select e.ename 이름, e.sal 급여
from emp e;

---> 테이블에 대해서도 별명을 사용할 수 있다!!!
---> 다음과 같이 수정해보자!

SELECT empno, ename
FROM emp e
WHERE  (SELECT count (empno)
              FROM emp
              WHERE mgr= e.empno) >0;

---> count가 0보다 크면? ----> 좀더 세련된 함수는?

SELECT empno, ename, sal
FROM emp e
WHERE EXISTS (SELECT empno
              FROM emp
              WHERE mgr= e.empno);

---> EXISTS함수는 질의식의 결과가 한 행이상 출력되면 참


/*****************************************************
실습 과제 :
1. 'SMITH'의 상사의 이름을 구하라
SELECT ENAME
FROM EMP
WHERE EMPNO = (SELECT MGR FROM EMP WHERE ENAME = 'SMITH');

2. 급여 등급(테이블salgrade에 있음)이 1등급인 직원의 이름과 급여를 구하라
SELECT ENAME, SAL FROM EMP WHERE SAL > (SELECT LOSAL FROM SALGRADE WHERE GRADE=1) AND SAL < (SELECT HISAL FROM SALGRADE WHERE GRADE=1);

3. 평균급여가 최고인 부서의 번호와 평균 급여는?
SELECT DEPTNO, AVG_SAL
FROM (
    SELECT DEPTNO, AVG(SAL) AS AVG_SAL
    FROM EMP
    GROUP BY DEPTNO
    HAVING AVG(SAL) = (
        SELECT MAX(AVG(SAL))
        FROM EMP
        GROUP BY DEPTNO
    )
);

4. 부하직원이 있는 사원의 정보(부서번호, 이름, 급여)를 구하라
   단, exists 함수를 쓰지 말고 in함수를 이용하라!
SELECT DEPTNO, ENAME, SAL
FROM EMP
WHERE EMPNO IN (SELECT MGR FROM EMP WHERE MGR IS NOT NULL);


*****************************************************/
