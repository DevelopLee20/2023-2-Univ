

--예제 1.emp 테이블에서 가장 많은 사원이 속해있는 부서번호와 사원수를 출력하라.


SELECT deptno, count(*)
FROM emp
GROUP BY deptno
HAVING count(deptno) =(SELECT max(count(*))
                              FROM emp
                              GROUP BY deptno);

--예제 2. emp 테이블에서 가장 많은 부하사원을 갖는 mgr의 사원번호와 이름을 출력하라.

SELECT empno, ename
FROM emp
WHERE empno=(SELECT mgr
                      FROM emp
                      GROUP BY mgr
                      HAVING count(mgr) =(SELECT max(count(*))
                                                   FROM emp
                                                   GROUP BY mgr));

--예제 3. 예제 2에서  가장 많은 부하사원을 갖는 mgr의 사원번호,이름, 그리고 부하직원 수를 출력하라












/*
==========================================
<<시간/날짜 연산>>
데이터베이스 질의처리에는 날짜/시간 연산이 자주 이용된다
이에 대한 정확한 사용법이 매우 중요하다
다음 예제를 통하여 연습해보자
==========================================
*/
--예제 4. SMITH보다 늦게 입사한 사원의 이름 및 입사일을 출력하라.


SELECT ename, hiredate
FROM emp
WHERE hiredate>(SELECT hiredate
                       FROM emp
                       WHERE ename='SMITH');

/*
--예제 5. 자신의 관리자보다 먼저 입사한 모든 사원의 이름, 입사일,관리자의 이름, 관리자의 입사일을 출력하되 
   각각 컬럼명을 이름, 입사일, 관리자이름, 관리자입사일 로 표시하여 출력하라.
*/

SELECT E.ename 이름, E.hiredate AS 입사일, M.ename 관리자이름, M.hiredate 관리자입사일
FROM emp E, emp M
WHERE E.mgr=M.empno AND E.hiredate<M.hiredate;
 

--예제 6.각 부서 별 입사일이 가장 오래된 사원을 한 명씩 선별해 사원번호, 사원명, 부서번호, 입사일을 출력하라.









/*
예제 7. 현재 시간과 현재 시간으로부터 한 시간 후의 시간을 출력하라.
   단, 현재시간 포맷은 ‘4자리년-2자일월-2자리일 24시:2자리분:2자리초’로 출력
       한시간후 포맷은 ‘4자리년-2자일월-2자리일 24시:2자리분:2자리초’로 출력
----> DATE자료형의 1단위는 1일임. 그러면 1시간은? 
*/

SELECT  to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') 현재시간,
           to_char(sysdate+1/24, 'YYYY-MM-DD HH24:MI:SS') 한시간후
FROM dual;


--예제 8. 사원의 이름, 입사일 ,근무년수를 구하라 (1년은 DATE/365)

SELECT ename  이름, to_char(hiredate, 'YYYY-MM-DD') 입사일 , trunc((sysdate - hiredate)/365) 근무년수
FROM emp;

--예제 9. 근무년수가 40년 이상 ~ 41년 이하인 사원의 사원번호, 사원명, 입사일, 근무년수를 출력하라.
   단, 근무년수는 월을 기준으로 버림 (예:30.4년 = 30년, 30.7년=30년)









/*
===================
<<<DECODE함수 활용>>>
===================
DECODE함수는 표준 SQL은 아님. 그러나 매우 중요하고 요긴한 함수이다.

-----
정의
-----
DECODE(A, B, X, Y) ---> A = B 이면 X를 출력, 아니면 Y를 출력
DECODE(A, B, X, C, Y, Z)  --->A = B이면 X 출력, A = C이면 Y 출력, A ≠ B 이고아니면 Z 출력
...
이런 방식으로 확장 가능함.
*/

--예제
--입사일이 1980년이면 1, 아니면 2를 출력

SELECT empno, hiredate, decode(to_char(hiredate, 'YYYY'), '1980', 1,2)
FROM emp;

--입사일이 1980년이면 1, 1980년이면 2, 아니면 3을 출력

SELECT empno, hiredate, decode(to_char(hiredate, 'YYYY'), '1980', 1, '1981', 2, 3)
FROM emp;

-->이를 활용해서 다음 질의를 처리해보자

--예제 10. 1980년~1982년 사이에 입사된 각 부서별 사원수를 부서번호, 부서명, 입사 1980, 입사1981, 입사1982로 출력하라.

SELECT d.deptno, d.dname,
          count(decode(to_char(e.hiredate, 'YYYY'), '1980', 1)) 입사1980,
          count(decode(to_char(e.hiredate, 'YYYY'), '1981', 1)) 입사1981,
          count(decode(to_char(e.hiredate, 'YYYY'), '1982', 1)) 입사1982
FROM emp e, dept d
WHERE e.deptno = d.deptno
GROUP BY d.deptno, d.dname;

/*
--예제 11. 각 부서별 사원수를 출력하라.
     단,  부서별 사원수가 없더라도 부서번호, 부서명은 출력(외부조인)
     부서별 사원수가 0인 경우 ‘없음’ 출력
     부서번호 오름차순 정렬
*/

SELECT d.deptno, d.dname,
          decode(count(e.ename), 0,'없음',count(e.ename)) 사원수
FROM emp e, dept d
WHERE e.deptno(+) = d.deptno
GROUP BY d.deptno, d.dname
ORDER BY d.deptno;

/*
==========================
다음은 공급자-부품에 관한 질의 예제임
관련 테이블 S(공급자), P(부품), sp(공급)
==========================
*/
--예제  12. "너트를 공급하는 공급자 이름"

SELECT sname
FROM   s
WHERE  s# IN
     ( SELECT s#
       FROM   sp
       WHERE  p# IN
		(SELECT p#
		  FROM p
		  WHERE PNAME='NUT') ) ;


---->  또다른 방법(JOIN을 이용하는 방법)
SELECT sname
FROM s,p,sp
WHERE s.s#=sp.s#
AND   p.p#=sp.p#
AND   p.pname='NUT';


--예제 13. "색깔이 빨간 부품을 공급하는 공급자 이름"

SELECT sname
FROM   s
WHERE  s# IN
     ( SELECT s#
       FROM   sp
       WHERE  p# IN
            ( SELECT p#
              FROM   p
              WHERE  color = 'RED' ) );


--예제 14. "부품 P2를 공급하지 않는 공급자 이름"

SELECT sname
FROM  s
WHERE  NOT EXISTS
     ( SELECT *
       FROM   sp
       WHERE   sp.s# = s.s#
       AND     sp.p# = 'P2');


--->혹은

SELECT sname
FROM s
WHERE s# NOT IN (SELECT DISTINCT s#
                 FROM sp
                 WHERE p# = 'P2');



--예제 15. "어떠한 부품도 공급하지 않는 공급자의 이름 (14번과 유사)








--->혹은











--예제 16. (디비전 연산) "모든 부품을 공급하는 공급자의 이름"

-->정의대로 하면

SELECT sname
FROM s
WHERE s# IN 
  ( SELECT s# FROM sp
      MINUS
    ( SELECT s#
      FROM
        ( SELECT * FROM (SELECT DISTINCT s# FROM sp), (SELECT p# FROM p)
          MINUS
        SELECT s#, p# FROM sp
         )
    )
  );



/*
윗식의 의미
우선 모든 공급자가 모든 부품을 납품한다고 가정한 sp에서 현재 sp를 빼준다
그러면 모든부품을 납품하는 공급자만 빠지고 그렇지 못한 공급자만 남게 되는데
이 공급자들을 S에서 제거하면 원하는 공급자만 남는다.
이를 이용하여 S에서 이름을 찾는다.
 
@@@@너무 복잡하다.@@@@@@
*/
-->다른 방법은?













/*
윗식의 의미 : 

공급자 S1을 생각해보자. 
부품리스트(P1, P2, P3, P4, P5, P6)에서 
그 공급자가 공급하는 부품(P1, P2, P3, P4, P5, P6)을 뺐을 때 공집합이 된다
S1은 모든 부품을 공급한다는 의미가 됨.

공급자 S2을 생각해보자. 
부품리스트(P1, P2, P3, P4, P5, P6)에서 
그 공급자가 공급하는 부품(P1, P2)을 빼면 (P3, P4, P5, P6)이 되어 공집합이 아니다
S2는 모든 부품을 공급하지 못한한다는 의미가 됨.
*/

--> 혹은 다음과 같이해도 무방함

SELECT DISTINCT s.sname
FROM s
WHERE NOT EXISTS
     (
       SELECT p#
        FROM p
        WHERE NOT EXISTS
         (SELECT  sp.p#
          FROM sp
          WHERE sp.s# = s.s#
            AND sp.p# = p.p#)
       );

/*
윗식의 의미
특정공급자에 대하여 부품별 공급여부를 체크하여 공급하지 않는 부품이 하나라도 있으면 제외함.

S1이 공급하지 못하는 부품을 찾아보자
sp에 (S1,P1)이 존재하므로 P1은 제외, (S1,P2)이 존재하므로 P2은 제외, ...
        (S1,P6)이 존재하므로 P6은 제외,  ---> 결국 S1이 공급하지 못하는 부품은 하나도 없다  --->S1출력

S2가 공급하지 못하는 부품을 찾아보자
sp에 (S2,P1)이 존재하므로 P1은 제외, (S2,P2)이 존재하므로 P2은 제외, ...
        (S2,P3)이 없으므로 공급 못하는 부품발생,  --->  S2가 공급하지 못하는 부품이 있다  --->S2출력배제
...
 */
 